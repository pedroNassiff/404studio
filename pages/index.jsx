// import { useRef, useState, useEffect } from "react";
// import useOnScreen from "./useOnScreen";

// import Head from "next/head";
// // import Hero from "../src/Components/Home/Hero";
// import hero from "./styles.module.scss";
// import { getCookies, getCookie, setCookie, deleteCookie } from 'cookies-next';
// // import ProyectList from "../src/Components/Home/ProyectList";
// // import Services from "../src/Components/Home/Servi";
// // import About from "../src/Components/Home/About";
// // import Blend from "../src/Components/Home/Blend";
// // import People from "../src/Components/Home/People";
// import Layout from "../src/Components/Layout/Layout";
// import Cookies from "../src/Components/Home/Cookies";

// import dynamic from 'next/dynamic'

// const Hero = dynamic(() => import('../src/Components/Home/Hero'))
// const ProyectList = dynamic(() => import('../src/Components/Home/ProyectList'))
// const Services = dynamic(() => import('../src/Components/Home/Servi'))
// const Blend = dynamic(() => import('../src/Components/Home/Blend'))
// const People = dynamic(() => import('../src/Components/Home/People'))

// const About = dynamic(() => import('../src/Components/Home/About'))



// function Home(props) {
//   const projectsRef = useRef();
//   const projectRefValue = useOnScreen(projectsRef);
//   const [isProjectRef, setIsProjectRef] =  useState(false);

//   const serviceRef = useRef();
//   const serviceRefValue = useOnScreen(serviceRef);
//   const [isServiceRef, setIsServiceRef] =  useState(false);

//   const aboutRef = useRef();
//   const aboutRefValue = useOnScreen(aboutRef);
//   const [isAboutRef, setIsAboutRef] =  useState(false);

//   const blendRef = useRef();
//   const blendRefValue = useOnScreen(blendRef);
//   const [isBlendRef, setIsBlendRef] =  useState(false);

//   const [btnAcceptState, setbtnAcceptState] = useState(true)
//   const [btnCancel, setBtnCancel] = useState(true)

//   useEffect(() => {
//     if (!isProjectRef && !isServiceRef && isAboutRef && isBlendRef)
//         setIsProjectRef(projectRefValue);
//         setIsServiceRef(serviceRefValue);
//         setIsAboutRef(aboutRefValue);
//         setIsBlendRef(blendRefValue);

//  }, [projectRefValue, serviceRefValue, aboutRefValue, blendRefValue])

//   const getCokkie = () => {
//     let id = getCookie('key')
//     if (id =='somos404'){
//       setbtnAcceptState(false);
//     }
//   }

//   const aceptFunction = (acceptedByScrolling) => {
//     setCookie('key', 'somos404');
//     setbtnAcceptState(false)
//   }

//   const cancelFuncion = () => {
//     setBtnCancel(false);
//     setbtnAcceptState(false)

//   }

// useEffect(() => {
//   getCokkie();
// }, [])


//   return (
//     <>
//       <Layout data-scroll-section>
//         <Head>
//           <title>404 - Home</title>
//           <meta name="description" content="Generated by create next app" />
//           <link rel="icon" href="/logo_2 (1).ico" />
//         </Head>
//         {btnAcceptState && (
//                 <Cookies btnAcceptState={btnAcceptState}  />
//            )}
//         <Hero />
//         <div ref={projectsRef}>
//           {projectRefValue &&  <ProyectList />}
//         </div>
       
//         <div ref={serviceRef}>
//         {serviceRefValue && <Services  />}
        
//         </div>
//       <div ref={aboutRef}>
//           {aboutRefValue && <About />}
//       </div>
//       <div ref={blendRef}>
//           {blendRefValue && <Blend />}
//       </div>
//         <People />
//       </Layout>
//     </>
//   );
// }

// export default Home;
import dynamic from 'next/dynamic'
import { useRef, useState, useEffect, Suspense  } from "react";
import useOnScreen from "./useOnScreen";
import Head from "next/head";
import Hero from "../src/Components/Home/Hero";
import hero from "./styles.module.scss";
import { getCookies, getCookie, setCookie, deleteCookie } from 'cookies-next';
import ProyectList from "../src/Components/Home/ProyectList";
// import Services from "../src/Components/Home/Servi";
// const Services = dynamic(() => import('../src/Components/Home/Servi'))

const Services = dynamic(() => import('../src/Components/Home/Servi'), {
  ssr: false 
})

import About from "../src/Components/Home/About";
import Blend from "../src/Components/Home/Blend";
import People from "../src/Components/Home/People";
import Layout from "../src/Components/Layout/Layout";
import Cookies from "../src/Components/Home/Cookies"

function Home(props) {

  
  const projectsRef = useRef();
  const projectRefValue = useOnScreen(projectsRef);
  const [isProjectRef, setIsProjectRef] =  useState(false);

  const serviceRef = useRef();
  const serviceRefValue = useOnScreen(serviceRef);
  const [isServiceRef, setIsServiceRef] =  useState(false);

  const aboutRef = useRef();
  const aboutRefValue = useOnScreen(aboutRef);
  const [isAboutRef, setIsAboutRef] =  useState(false);

  const blendRef = useRef();
  const blendRefValue = useOnScreen(blendRef);
  const [isBlendRef, setIsBlendRef] =  useState(false);

  const peopleRef = useRef();
  const peopleRefValue = useOnScreen(peopleRef);
  const [isPeopleRef, setIsPeopleRef] = useState(false);

  const [btnAcceptState, setbtnAcceptState] = useState(true)
  const [btnCancel, setBtnCancel] = useState(true)
  const cookieConsentRef = useRef();
  const ref = useRef();

  
  useEffect(() => {
    if (!isProjectRef && !isServiceRef && !isAboutRef && !isBlendRef && isPeopleRef)
        setIsProjectRef(projectRefValue);
        setIsServiceRef(serviceRefValue);
        setIsAboutRef(aboutRefValue);
        setIsBlendRef(blendRefValue);
        setIsPeopleRef(peopleRefValue);
 }, [projectRefValue, serviceRefValue, aboutRefValue, blendRefValue, peopleRefValue])

  const getCokkie = () => {
    let id = getCookie('key')
    if (id =='somos404'){
      setbtnAcceptState(false);
    }
  }

  const aceptFunction = (acceptedByScrolling) => {
    setCookie('key', 'somos404');
    setbtnAcceptState(false)
  }

  const cancelFuncion = () => {
    setBtnCancel(false);
    setbtnAcceptState(false)

  }

useEffect(() => {
  getCokkie();
}, [])


  return (
    <>
     
      <Layout data-scroll-section>
     
        <Head>
          <title>404 - Home</title>
          <meta name="description" content="Generated by somos404" />
          <link rel="icon" href="/logo_2 (1).ico" />
        </Head>
        {btnAcceptState && (
                <Cookies btnAcceptState={btnAcceptState}  />
           )}
    
        <Hero />
     
        <ProyectList />
   
     
     
      <Services  />
    

          <About />
    

         <Blend />


    <People />
    
        
        
        

      </Layout>
    </>
  );
}

export default Home;
